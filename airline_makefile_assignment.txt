GITHUB REPO LINK: https://github.com/Ayroid/AirlineManagementSystem.git

MAKE FILE CODE:

CXX := g++ # Assigning compiler
CXXFLAGS := -std=c++11 -Wall #Assigning compiler flags
SRC_DIR := src # Assigning src directory
BIN_DIR := bin # Assigning bin directory

# List of source files. Wildcard is used to get all files with .cpp extension.
SRCS := $(wildcard $(SRC_DIR)/*.cpp) 

# List of object files. patsubst is used to replace the src directory with the bin directory
OBJS := $(patsubst $(SRC_DIR)/%.cpp,$(BIN_DIR)/%.o,$(SRCS))

# List of dependency files
DEPS := $(patsubst $(SRC_DIR)/%.cpp,$(BIN_DIR)/%.d,$(SRCS))

# Executable file name. The executable will be created in the bin directory
EXECUTABLE := $(BIN_DIR)/airline 

# Target: all
# Default target to build the executable
all: $(EXECUTABLE)

# Target: $(EXECUTABLE)
# Builds the executable from object files
$(EXECUTABLE): $(OBJS)
	$(CXX) $(CXXFLAGS) $^ -o $@

# Pattern Rule: $(BIN_DIR)/%.o
# Compiling each source file into its corresponding object file
$(BIN_DIR)/%.o: $(SRC_DIR)/%.cpp | $(BIN_DIR)
	$(CXX) $(CXXFLAGS) -MMD -c $< -o $@

# Target: $(BIN_DIR)
# Creates the bin directory if it doesn't exist
$(BIN_DIR):
	mkdir -p $(BIN_DIR)

# Include the dependency files
-include $(DEPS)

# Target: clean
# Cleans the project by removing the compiled files and the executable
.PHONY: clean
clean:
	rm -rf $(BIN_DIR)/*

# Target: run
# Compiles and builds the project, then runs the "airline" executable
.PHONY: run
run: $(EXECUTABLE)
	$(EXECUTABLE)